name: Build and Release FIM Daemon

on:
  push:
    tags: ['v*']
  workflow_dispatch:

jobs:
  build-windows:
    name: Build Windows Installer
    runs-on: windows-latest
    defaults:
      run:
        working-directory: ./src/windows

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Download and Install Inno Setup
      run: |
        $innoUrl = "https://files.jrsoftware.org/is/6/innosetup-6.2.2.exe"
        $installer = "innosetup.exe"
        Invoke-WebRequest -Uri $innoUrl -OutFile $installer
        Start-Process -FilePath $installer -ArgumentList "/VERYSILENT", "/SUPPRESSMSGBOXES", "/NORESTART", "/SP-" -Wait
        Start-Sleep -Seconds 10
        Remove-Item $installer -Force

    - name: Compile Windows Installer
      run: |
        $innoCompiler = "C:\Program Files (x86)\Inno Setup 6\ISCC.exe"
        & "$innoCompiler" "packaging/installer.iss"
        
        # Create build directory if it doesn't exist
        if (!(Test-Path "build")) { New-Item -ItemType Directory -Path "build" }
        Move-Item "Output/*.exe" "build/" -ErrorAction SilentlyContinue

    - name: Upload Windows Artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-installer
        path: src/windows/build/*.exe
        retention-days: 30

  build-linux:
    name: Build Linux Package
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src/linux

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y dpkg-dev debhelper fakeroot

    - name: Build DEB package
      run: |
        chmod +x packaging/build-deb.sh
        ./packaging/build-deb.sh

    - name: Upload Linux Artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-package
        path: src/linux/build/*.deb
        retention-days: 30

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-windows, build-linux]
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/windows-installer/*.exe
          artifacts/linux-package/*.deb